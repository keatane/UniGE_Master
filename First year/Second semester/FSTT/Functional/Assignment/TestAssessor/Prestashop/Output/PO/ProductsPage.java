package TestCases.PO;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class ProductsPage {

    WebDriver driver;

    JavascriptExecutor js;

    Map<String, Object> vars;

    public ProductsPage(WebDriver driver, JavascriptExecutor js, Map<String, Object> vars) {
        this.driver = driver;
        this.js = js;
        this.vars = vars;
    }

    public void click_CSSSELECTOR_employee_namestring_long() {
        By elem = By.cssSelector(".employee_name > .string-long");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void click_ID_header_logout() {
        By elem = By.id("header_logout");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void logOut() {
        click_CSSSELECTOR_employee_namestring_long();
        click_ID_header_logout();
    }

    public void addProduct() {
        By elem = By.id("page-header-desc-product-new_product");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
        js.executeScript("window.scrollTo(0,0)");
    }

    public List<WebElement> verifyAddingProductSuccessfully() {
        By elem = By.cssSelector(".alert-success:nth-child(1)");
        MyUtils.WaitForElementLoaded(driver, elem);
        List<WebElement> elements = driver.findElements(elem);
        return elements;
    }

    public void click_ID_page_header_desc_product_new_product() {
        By elem = By.id("page-header-desc-product-new_product");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void click_CSSSELECTOR_panel_footernth_child22btnnth_child2process_icon_save() {
        By elem = By.cssSelector(".panel-footer:nth-child(22) > .btn:nth-child(2) > .process-icon-save");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void verifyRedBox() {
        By elem = By.cssSelector("ol > li:nth-child(1)");
        MyUtils.WaitForElementLoaded(driver, elem);
    }

    public void addProduct_1() {
        click_ID_page_header_desc_product_new_product();
        click_CSSSELECTOR_panel_footernth_child22btnnth_child2process_icon_save();
        verifyRedBox();
    }

    public String set_CSSSELECTOR_ollinth_child1() {
        By elem = By.cssSelector("ol > li:nth-child(1)");
        MyUtils.WaitForElementLoaded(driver, elem);
        return driver.findElement(elem).getText();
    }

    public String set_CSSSELECTOR_ollinth_child2() {
        By elem = By.cssSelector("ol > li:nth-child(2)");
        MyUtils.WaitForElementLoaded(driver, elem);
        return driver.findElement(elem).getText();
    }
}
