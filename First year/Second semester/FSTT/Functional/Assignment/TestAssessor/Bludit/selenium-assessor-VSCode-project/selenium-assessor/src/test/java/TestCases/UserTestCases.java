package TestCases;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import java.util.*;

import TestCases.PO.*;

public class UserTestCases {

    private WebDriver driver;

    private Map<String, Object> vars;

    private JavascriptExecutor js;

    @Before
    public void setUp() {
        driver = new FirefoxDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1280, 720));
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    /* 
     * NOTE: the tests numbers are in index-1 with respect to the cases in the Gherkin directory
     * This choice has been made to make tests execution in ascending name order 
    */
    @Test
    public void testFeature7() {
        /*
         *  Feature: User management
            Scenario: Adds a user to the system
         */
        new LoginPage(driver, js, vars).adminLogin("admin", "password");
        MenuPage _MenuPage = new MenuPage(driver, js, vars);
        _MenuPage.selectUsers();
        UsersPage _UsersPage = new UsersPage(driver, js, vars);
        _UsersPage.addUser();
        AddUserPage _AddUserPage = new AddUserPage(driver, js, vars);
        _AddUserPage.addUserDetails("usertest", "usertest123", "usertest123", "user@test.com", "Administrator");
        assert (_UsersPage.verifyAddedUserSuccessfully().size() > 0);
        _UsersPage.logOut();
    }

    @Test
    public void testFeature8() {
        /*
         *  Feature: User management
            Scenario: Changes a user's password
         */
        new LoginPage(driver, js, vars).adminLogin("admin", "password");
        MenuPage _MenuPage = new MenuPage(driver, js, vars);
        _MenuPage.selectUsers();
        UsersPage _UsersPage = new UsersPage(driver, js, vars);
        _UsersPage.selectSecondUser();
        EditUserDetailsPage _EditUserDetailsPage = new EditUserDetailsPage(driver, js, vars);
        _EditUserDetailsPage.clickChangePassword();
        ChangePasswordPage _ChangePasswordPage = new ChangePasswordPage(driver, js, vars);
        _ChangePasswordPage.changePasswordAndSave("newpassword", "newpassword");
        _UsersPage.logOut();
    }

    @Test
    public void testFeature9() {
        /*
         *  Feature: User management
            Scenario: Adds a user's links to social networks
         */
        new LoginPage(driver, js, vars).adminLogin("admin", "password");
        MenuPage _MenuPage = new MenuPage(driver, js, vars);
        _MenuPage.selectUsers();
        UsersPage _UsersPage = new UsersPage(driver, js, vars);
        _UsersPage.selectFirstUser();
        EditUserDetailsPage _EditUserDetailsPage = new EditUserDetailsPage(driver, js, vars);
        _EditUserDetailsPage.editFacebookAndInstagram("https://www.facebook.com/some_fake_user_name_52432562135863\"", "https://instagram.com/some_fake_user_name_52432562135863\"");
        _UsersPage.selectFirstUser();
        assertThat(_EditUserDetailsPage.verifyFacebookAdded(), is("https://www.facebook.com/some_fake_user_name_52432562135863\""));
        assertThat(_EditUserDetailsPage.verifyInstagramAdded(), is("https://instagram.com/some_fake_user_name_52432562135863\""));
        _EditUserDetailsPage.logOut();
    }
}
