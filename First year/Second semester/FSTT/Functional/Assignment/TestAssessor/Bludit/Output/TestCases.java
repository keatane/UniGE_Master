package TestCases;

import org.junit.BeforeClass;
// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
import TestCases.PO.*;

public class TestCases {

    @BeforeClass()
    public static void setup() {
        System.setProperty("webdriver.gecko.driver", "InsertGeckoPathHere");
    }

    private WebDriver driver;

    private Map<String, Object> vars;

    private JavascriptExecutor js;

    @Before
    public void setUp() {
        driver = new FirefoxDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void testFeature1() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1280, 720));
        LoginPage _LoginPage = new LoginPage(driver, js, vars);
        _LoginPage.adminLogin("admin", "password");
        MenuPage _MenuPage = new MenuPage(driver, js, vars);
        _MenuPage.selectNewContent();
        EditNewContentPage _EditNewContentPage = new EditNewContentPage(driver, js, vars);
        _EditNewContentPage.editTitleAndSave("Test Content");
        ManageContentPage _ManageContentPage = new ManageContentPage(driver, js, vars);
        assert (_ManageContentPage.testNewContentAddedSuccessfully().size() > 0);
        {
            WebDriverWait wait = new WebDriverWait(driver, 5);
            wait.until(ExpectedConditions.invisibilityOfElementLocated(By.id("alert")));
        }
        _ManageContentPage.logOut();
    }

    @Test
    public void testFeature2() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1280, 720));
        LoginPage _LoginPage = new LoginPage(driver, js, vars);
        _LoginPage.adminLogin("admin", "password");
        MenuPage _MenuPage = new MenuPage(driver, js, vars);
        _MenuPage.selectContent(true, true, true, true, false);
        EditContentPage _EditContentPage = new EditContentPage(driver, js, vars);
        _EditContentPage.changeFriendlyUrl("new-post-url");
        ManageContentPage _ManageContentPage = new ManageContentPage(driver, js, vars);
        assertThat(_ManageContentPage.assertUrlChangedSuccessfully(), is("/new-post-url"));
        _ManageContentPage.logOut();
    }

    @Test
    public void testFeature3() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1280, 720));
        LoginPage _LoginPage = new LoginPage(driver, js, vars);
        _LoginPage.adminLogin("admin", "password");
        MenuPage _MenuPage = new MenuPage(driver, js, vars);
        _MenuPage.selectContent(true, true, true, false, true);
        EditContentPage _EditContentPage = new EditContentPage(driver, js, vars);
        _EditContentPage.changePosition("30");
        ManageContentPage _ManageContentPage = new ManageContentPage(driver, js, vars);
        _ManageContentPage.selectPublishedContent();
        _EditContentPage.testPositionChanged();
        assertThat(_EditContentPage.set_ID_jsposition_1(), is("30"));
        _EditContentPage.logOut();
    }

    @Test
    public void testFeature4() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1280, 720));
        LoginPage _LoginPage = new LoginPage(driver, js, vars);
        _LoginPage.adminLogin("admin", "password");
        MenuPage _MenuPage = new MenuPage(driver, js, vars);
        _MenuPage.click_LINKTEXT_Content();
        ManageContentPage _ManageContentPage = new ManageContentPage(driver, js, vars);
        _ManageContentPage.selectPublishedContent();
        EditContentPage _EditContentPage = new EditContentPage(driver, js, vars);
        _EditContentPage.setParent("Create your own content");
        assertThat(_EditContentPage.set_ID_jsparent(), is("create-your-own-content"));
        _EditContentPage.click_ID_jsparent_1();
    }

    @Test
    public void testFeature5() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1280, 720));
        LoginPage _LoginPage = new LoginPage(driver, js, vars);
        _LoginPage.adminLogin("admin", "password");
        MenuPage _MenuPage = new MenuPage(driver, js, vars);
        _MenuPage.selectNewContent_1();
        EditNewContentPage _EditNewContentPage = new EditNewContentPage(driver, js, vars);
        _EditNewContentPage.editTitleAndSaveDraft("Draft Content");
        ManageContentPage _ManageContentPage = new ManageContentPage(driver, js, vars);
        assert (_ManageContentPage.testDraftAddedSuccessfully().size() > 0);
        {
            WebDriverWait wait = new WebDriverWait(driver, 5);
            wait.until(ExpectedConditions.invisibilityOfElementLocated(By.id("alert")));
        }
        _ManageContentPage.logOut();
    }

    @Test
    public void testFeature6() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1280, 720));
        LoginPage _LoginPage = new LoginPage(driver, js, vars);
        _LoginPage.adminLogin("admin", "password");
        MenuPage _MenuPage = new MenuPage(driver, js, vars);
        _MenuPage.click_LINKTEXT_Content();
        ManageContentPage _ManageContentPage = new ManageContentPage(driver, js, vars);
        _ManageContentPage.selectSetupNewSite();
        EditContentPage _EditContentPage = new EditContentPage(driver, js, vars);
        _EditContentPage.setStickyStatus("Sticky");
        assert (_ManageContentPage.verifyStickyAddedSuccessfully().size() > 0);
        _ManageContentPage.logOut();
    }

    @Test
    public void testFeature7() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1280, 720));
        LoginPage _LoginPage = new LoginPage(driver, js, vars);
        _LoginPage.adminLogin("admin", "password");
        MenuPage _MenuPage = new MenuPage(driver, js, vars);
        _MenuPage.click_LINKTEXT_Content();
        ManageContentPage _ManageContentPage = new ManageContentPage(driver, js, vars);
        _ManageContentPage.selectFollowBludit();
        EditContentPage _EditContentPage = new EditContentPage(driver, js, vars);
        _EditContentPage.deleteContent();
        assert (_EditContentPage.set_LINKTEXT_FollowBludit().size() == 0);
        {
            WebDriverWait wait = new WebDriverWait(driver, 5);
            wait.until(ExpectedConditions.invisibilityOfElementLocated(By.id("alert")));
        }
        _ManageContentPage.logOut();
    }

    @Test
    public void testFeature8() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1280, 720));
        LoginPage _LoginPage = new LoginPage(driver, js, vars);
        _LoginPage.adminLogin("admin", "password");
        MenuPage _MenuPage = new MenuPage(driver, js, vars);
        _MenuPage.selectUsers();
        UsersPage _UsersPage = new UsersPage(driver, js, vars);
        _UsersPage.addUser();
        AddUserPage _AddUserPage = new AddUserPage(driver, js, vars);
        _AddUserPage.addUserDetails("usertest", "usertest123", "usertest123", "user@test.com", "Administrator");
        assert (_UsersPage.verifyAddedUserSuccessfully().size() > 0);
        _UsersPage.logOut();
    }

    @Test
    public void testFeature9() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1280, 720));
        LoginPage _LoginPage = new LoginPage(driver, js, vars);
        _LoginPage.adminLogin("admin", "password");
        MenuPage _MenuPage = new MenuPage(driver, js, vars);
        _MenuPage.selectUsers();
        UsersPage _UsersPage = new UsersPage(driver, js, vars);
        _UsersPage.selectSecondUser();
        EditUserDetailsPage _EditUserDetailsPage = new EditUserDetailsPage(driver, js, vars);
        _EditUserDetailsPage.clickChangePassword();
        ChangePasswordPage _ChangePasswordPage = new ChangePasswordPage(driver, js, vars);
        _ChangePasswordPage.changePasswordAndSave("newpassword", "newpassword");
        _UsersPage.logOut();
    }

    @Test
    public void testFeature10() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1280, 720));
        LoginPage _LoginPage = new LoginPage(driver, js, vars);
        _LoginPage.adminLogin("admin", "password");
        MenuPage _MenuPage = new MenuPage(driver, js, vars);
        _MenuPage.selectUsers();
        UsersPage _UsersPage = new UsersPage(driver, js, vars);
        _UsersPage.selectFirstUser();
        EditUserDetailsPage _EditUserDetailsPage = new EditUserDetailsPage(driver, js, vars);
        _EditUserDetailsPage.editFacebookAndInstagram("https://www.facebook.com/some_fake_user_name_52432562135863\"", "https://instagram.com/some_fake_user_name_52432562135863\"");
        _UsersPage.selectFirstUser();
        assertThat(_EditUserDetailsPage.verifyFacebookAdded(), is("https://www.facebook.com/some_fake_user_name_52432562135863\""));
        assertThat(_EditUserDetailsPage.verifyFacebookAdded(), is("https://instagram.com/some_fake_user_name_52432562135863\""));
        _EditUserDetailsPage.logOut();
    }
}
