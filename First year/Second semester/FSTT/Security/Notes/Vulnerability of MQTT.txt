DDoS Vulnerability of MQTT

MQTT is based on TCP (handshake)

We can run specific commands to send to the broker and get the response, just like other protocols (e.g. HTTP -> GET,POST...)
For example:
CONNECT: client want to connect, CONNACK as response
PUBLISH, SUBSCRIBE
Also with CONNECT a keep alive (2byte) for a certain amount of time (e.g. send message every hour), it avoids re-connecting and wasting bandwidth

A malicious user can create a lot of connections, CONNECT them with a specific keep-alive of maximum number (65535 seconds, about 18h). By definition the protocol keep up the connection for 1,5 times the specified value, so 27h.
I do not need to add any other information, just the CONNECT one. This attack is named Slowite. Just before the closing of the connection I send another CONNECT with a long keep-alive (it is not refused) or other messages (the keep alive is also restored in this case [*]).

The problems by definition are:
- the keep-alive is client specified, it should be done by the server or from a fixed range of value, or adapting on the client
- the server before closing the connection is waiting 1,5 times the original time specified

Different brokers specify a max of contemporary connections: e.g. mosquitto 1024, so if this amount of connections are created the server is full.


[*]
Which data can be sent before the closing of the connection to keep the connection alive:
- publishing data can raise error
- a minimal solution data is to PING (level 7, not TCP one) the packet (broker), obtaining a PR response. This allows to keep up the connection alive. This enhancement is known as SlowTT, minimal data to keep the maximum time available the connection up.


